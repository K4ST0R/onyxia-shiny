name: Deploy shiny app

on:
  workflow_dispatch:
    inputs:
      target_scale_set:
        description: "Which scale set to deploy?"
        type: string
        required: true

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: nand42/test-onyxia
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./app/
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.docker_meta.outputs.tags }}
            ${{ github.ref == 'refs/heads/main' && 'nand42/test-onyxia:latest' || '' }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  # deploy:
  #   runs-on: ubuntu-latest
  #   environment: ${{ github.event.inputs.environment_name }}

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Write out the kubeconfig info
  #       run: |
  #         echo ${{ secrets.DEPLOY_ACCOUNT }} | base64 -d > /tmp/config

  #     - name: Update deployment (using latest chart of actions-runner-controller-charts/auto-scaling-runner-set)
  #       run: |
  #         helm install ${{ github.event.inputs.target_scale_set }} \
  #         --namespace "${{ github.event.inputs.runner_namespace }}" \
  #         --set githubConfigSecret.github_app_id="${{ vars.ARC_APP_ID }}" \
  #         --set githubConfigSecret.github_app_installation_id="${{ vars.ARC_INSTALL_ID }}" \
  #         --set githubConfigSecret.github_app_private_key="${{ secrets.ARC_APP_PRIVATE_KEY }}" \
  #         -f deployments/helm-${{ github.event.inputs.target_scale_set }}.yml \
  #         oci://ghcr.io/actions/actions-runner-controller-charts/auto-scaling-runner-set

  #       env:
  #         KUBECONFIG: /tmp/config

  #     - name: Remove kubeconfig info
  #       run: rm -f /tmp/config